{"version":3,"file":"static/js/186.3e45bcff.chunk.js","mappings":"yNAgCA,UA5BgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA6BE,EAAAA,EAAAA,UAAS,IAAtC,eAAMC,EAAN,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,8GAEOC,EAAAA,EAAAA,IAAgBP,GAFvB,OAENQ,EAFM,OAGZJ,EAAWI,GAHC,gDAKZC,QAAQC,MAAR,MALY,yDAAH,qDASbJ,GACL,GAAE,CAACN,KAGA,wBACyB,IAAnBG,EAAQQ,OAAgB,2CAA6CR,EAAQS,KAAI,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,GAAnB,OAC/E,2BACI,qCAAaF,MACb,uBAAIC,MAFCC,EADsE,KAQ9F,C,+LC5BDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMT,IAAMC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,uBADQ,cACzBG,EADyB,yBAExBA,EAASX,KAAKY,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAOrB,GAAP,uFACHgB,EAAAA,EAAAA,IAAA,iBAAoBhB,IADjB,cACpBmB,EADoB,yBAEnBA,EAASX,MAFU,2CAAH,sDAKZc,EAAY,mCAAG,WAAOtB,GAAP,uFACHgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,aADG,cACpBmB,EADoB,yBAEnBA,EAASX,KAAKe,MAFK,2CAAH,sDAKZhB,EAAe,mCAAG,WAAMP,GAAN,uFACNgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,aADM,cACvBmB,EADuB,yBAEtBA,EAASX,KAAKY,SAFQ,2CAAH,sDAKfI,EAAgB,mCAAG,WAAOC,GAAP,uFACPT,EAAAA,EAAAA,IAAA,8BAAiCS,IAD1B,cACxBN,EADwB,yBAEvBA,EAASX,KAAKY,SAFS,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/helpers/api.jsx"],"sourcesContent":["import { getMovieReviews } from \"components/helpers/api\"\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const[reviews, setReviews] = useState([])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n              const data = await getMovieReviews(movieId);\n              setReviews(data)\n            } catch (error) {\n              console.error(error);\n            }\n          };\n      \n          fetchData();\n    }, [movieId])\n\n    return(\n        <ul>\n            { reviews.length === 0 ?  \"We don`t have any reviews for this movie\" : reviews.map(({author, content, id}) => (\n                <li key={id}>\n                    <h4>Author: {author}</h4>\n                    <p>{content}</p>\n                </li>\n            ))}\n        </ul>\n    )\n}\nexport default Reviews","import axios from \"axios\";\n\nconst API_KEY = 'ace05e7e513bb2dcaf00821262e8ca69';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY\n};\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n}\n\nexport const getMovieById = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n}\n\nexport const getMovieCast = async (movieId) => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n}\n\nexport const getMovieReviews = async(movieId) =>{\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n}\n\nexport const getMoviesByQuery = async (values) => {\n  const response = await axios.get(`search//movie?query=${values}`);\n  return response.data.results;\n}"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchData","getMovieReviews","data","console","error","length","map","author","content","id","axios","api_key","getTrandingMovies","response","results","getMovieById","getMovieCast","cast","getMoviesByQuery","values"],"sourceRoot":""}